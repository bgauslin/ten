@use 'sass:math';

// Colors.
$button-color: #999;
$button-hover: white;

// Static dimensions.
$button-size: 2.75rem;
$gap-small: 1rem;
$gap-medium: 2rem;
$gap-large: 4rem;
$max-size: 37.5rem; // 600px

// Computed dimensions.
$button-space: $button-size + ($gap-small * 2);

// Computed breakpoints based on content.
$breakpoint-1: $max-size + ($button-space * 2);
$breakpoint-2: ($max-size * 2) + ($button-space * 2);


// [1] Ensures buttons are anchored to bottom of viewport on small screens and
//     provides vertical centering on large screens.
// [2] Prevents scrolling otherwise caused by the 10x images.
:host {
  --app-grid: 'scenes scenes scenes' 1fr 'prev . next' #{$button-space} / #{$button-space} 1fr #{$button-space};
  --scene-gap: #{$gap-small};
  --scene-grid: 'image image image image' '. distance power .' '. blurb blurb .' 1fr / 0 1fr auto 0;

  @media (min-width: #{$breakpoint-1}) {
    --app-grid: 'prev scenes next' 1fr / 1fr #{$max-size} 1fr;
    --scene-gap: #{$gap-medium} 0;
    --scene-grid: '. .' #{$gap-medium} 'image image' #{$max-size} 'distance power' 'blurb blurb' 1fr / 1fr auto;
  }

  @media (min-width: #{$breakpoint-2}) {
    --app-grid: 'prev scenes next' 1fr / 1fr #{$max-size * 2} 1fr;
    --scene-gap: #{$gap-medium} #{$gap-large};
    --scene-grid: 'image distance power' 'image blurb blurb' 'image . .' 1rem / #{$max-size} 1fr auto;
  }

  display: grid;
  font-family: 'Avenir Variable', sans-serif;
  font-variation-settings: 'wght' 500;
  grid: var(--app-grid);
  min-block-size: 100dvh; // [1]
  overflow: hidden; // [2]
}

* {
  box-sizing: border-box;
}

// ----------------------------------------
// Intro animations.

@keyframes textFade {
  0%,
  100% {
    opacity: 0;
  }
  25%,
  75% {
    opacity: 1;
  }
}

@keyframes introFade {
  0%,
  90% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes starfield {
  0% {
    opacity: 0;
    transform: scale(2) rotate(0);
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: scale(1) rotate(20deg);
  }
}

@keyframes stars {
  0% {
    opacity: 0;
    transform: scale(1.5) rotate(0);
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: scale(1.2) rotate(20deg);
  }
}

@keyframes atom {
  0% {
    opacity: 0;
    transform: scale(.1) rotate(0);
  }
  35%,
  95% {
    opacity: 1;
  }
  95% {
    opacity: 0;
  }
  100% {
    transform: scale(1) rotate(360deg);
  }
}

@keyframes electron {
  0% {
    offset-distance: 0%;
  }
  100% {
    offset-distance: 100%;
  }
}

@keyframes nucleus {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(1.1);
  }
}

// ----------------------------------------
// Intro animation sequence.

[id='stars'] {
  animation: 30s 1 linear stars;
}

// "...light years"
[id='intro'] > p:nth-of-type(1) {
  animation: 5s 2s 1 textFade;
}

[id='atom'] {
  animation: 10s 6s 1 linear atom;
}

// "...atom"
[id='intro'] > p:nth-of-type(2) {
  animation: 5s 9s 1 textFade;
}

// "...forty-two scenes..."
[id='intro'] > p:nth-of-type(3) {
  animation: 6s 16s 1 textFade;
}

[id='skip'] {
  animation: 2s 22s 1 forwards fadeOut;
}

[id='intro'] h1 {
  animation: 8s 22s 1 textFade;
}

[id='intro'] .tagline {
  animation: 4s 24s 1 textFade;
}

// Overall wrapper element.
[id='intro'] {
  animation: 33s 1 introFade;

  &[data-skip] {
    animation: 1s 1 fadeOut;
  } 
}

// ----------------------------------------
// Intro elements.

// [1] Prevent scrolling for scaled SVGs.
[id='intro'] {
  background: black;
  block-size: 100dvh; // [1]
  display: grid;
  grid: 1fr / 1fr;
  grid-area: 1 / 1 / -1 / -1;
  opacity: 0;
  place-items: center;
  pointer-events: none;
  position: relative;
  transition: opacity .5s;
  z-index: 3;
  overflow: hidden; // [1]
}

[id='intro'] > * {
  grid-area: 1 / 1 / -1 / -1;
}

[id='intro'] :is(h1, p) {
  margin: 0;
  opacity: 0;
  text-align: center;
}

[id='intro'] h1 {
  font-size: 4rem;
  letter-spacing: .15em;
  text-transform: uppercase;
}

[id='intro'] p {
  font-size: 1.5rem;
  line-height: 1.5;
  max-inline-size: 43rem;
}

[id='stars'] {
  animation: 10s 1 starfield;
  opacity: 0;
  position: absolute;
  z-index: -1;
}

[id='stars'] circle {
  fill: white;

  &:nth-child(7n) {
    opacity: .2;
  }

  &:nth-child(11n) {
    opacity: .5;
  }
}

[id='atom'] {
  block-size: 600px;
  display: grid;
  grid: 1fr / 1fr;
  inline-size: 600px;
  opacity: 0;
}

[id='atom'] > * {
  grid-area: 1 / 1 / -1 / -1;
}

[id='atom'] path {
  fill: none;
  stroke: white;
  stroke-width: 2;
}

.nucleus {
  animation: .5s infinite alternate nucleus;
  background-color: rgba(white, .5);
  block-size: 80px;
  border-radius: 40px;
  inline-size: 80px;
  place-self: center;
}

.electron {
  animation: 1s infinite linear electron;
  background-color: white;
  block-size: 40px;
  border-radius: 20px;
  inline-size: 40px;
  place-self: start;
}

[id='electron-2'],
[id='electron-3'] {
  animation-delay: .5s;
}

[id='electron-1'] {
  offset-path: path("M 384 299 C 384 151.539978 346.391907 32 300 32 C 253.608078 32 216 151.539978 216 299 C 216 446.460022 253.608078 566 300 566 C 346.391907 566 384 446.460022 384 299 Z");
}

[id='electron-2'] {
  offset-path: path("M 342 371.746124 C 469.704102 298.016113 554.424744 205.676575 531.22876 165.5 C 508.032837 125.323425 385.704102 152.523865 258 226.253845 C 130.295868 299.983887 45.575256 392.323425 68.77121 432.5 C 91.967163 472.676575 214.295868 445.476135 342 371.746124 Z");
}

[id='electron-3'] {
  offset-path: path("M 342 226.253845 C 214.295868 152.523865 91.967163 125.323425 68.77121 165.5 C 45.575256 205.676575 130.295868 298.016113 258 371.746124 C 385.704102 445.476135 508.032837 472.676575 531.22876 432.5 C 554.424744 392.323425 469.704102 299.983887 342 226.253845 Z");
}

// ----------------------------------------
// All scenes.

ul {
  display: grid;
  grid: 1fr / 1fr;
  grid-area: scenes;
  inline-size: 100%;
  list-style: none;
  margin: 0;
  padding: 0;
  position: relative;
  z-index: 1;

  @media (min-width: #{$breakpoint-2}) {
    place-self: center;
  }
}

// ----------------------------------------
// Individual scene.

li {
  display: grid;
  gap: var(--scene-gap);
  grid: var(--scene-grid);
  grid-area: 1 / 1 / -1 / -1;
  inline-size: 100%;
}

// Scene media.
img {
  aspect-ratio: 1;
  background: white;
  block-size: auto;
  display: grid;
  grid-area: image;
  inline-size: 100%;
  place-self: center;
  transition: opacity 1s, transform 1s;
  vertical-align: middle;

  [aria-hidden='true'] & {
    opacity: 0;
    transform: scale(.1);
  }

  [aria-hidden='true'][data-viewed] & {
    transform: scale(10);
  }
}

// Scene text.
:is(.distance, .power, .blurb) {
  transition: opacity 1s;
}

[aria-hidden='true'] :is(.distance, .power, .blurb) {
  opacity: 0;
}

:is(.distance, .power) {
  font-family: 'Avenir Variable', sans-serif;
  margin-block: 0;
}

.distance {
  display: flex;
  gap: 1rem;
  grid-area: distance;
  position: relative;
  inset-block: .5rem;
}

.power {
  font-size: 1.5rem;
  grid-area: power;
}

sup {
  font-variation-settings: 'wght' 400;
  font-size: 75%;
  margin-inline: .25em 0;
}

.blurb {
  font-size: clamp(.875rem, .875rem + 1vw, 1rem);
  font-variation-settings: 'wght' 400;
  grid-area: blurb;
  line-height: 1.5;
}

.blurb > p {
  margin-block: 0 1rem;
}

// ----------------------------------------
// Buttons.

button {
  appearance: none;
  backdrop-filter: blur(8px);
  background: 0;
  block-size: $button-size;
  border: 0;
  color: $button-color;
  cursor: pointer;
  display: grid;
  font-family: inherit;
  font-size: 1rem;
  outline: 0;
  padding: 0 1rem;
  place-content: center;
  place-self: center;
  transition: opacity .2s;

  &[disabled] {
    opacity: 0;
    pointer-events: none;
  }

  &:hover,
  &:focus {
    color: $button-hover;
  }

  @media (any-hover: hover) {
    transition: color .2s, opacity .2s;
  }
}

// 'Skip intro' button.
[id='skip'] {
  background: black;
  border: 2px solid white;
  border-radius: .5rem;
  color: white;
  inset-block: auto 4rem;
  inset-inline: auto 4rem;
  position: fixed;
  z-index: 3;

  &:hover,
  &:focus {
    background: white;
    color: black;
  }

  @media (any-hover: hover) {
    transition: background-color .2s, color .2s, opacity .2s;
  }
}

// Prev/next buttons.
.zoom {
  border: 4px solid $button-color;
  border-radius: math.div($button-size, 2);
  inline-size: $button-size;
  inset-block: auto 1rem;
  padding: 0;
  position: fixed;
  transition: opacity .2s, transform .2s;
  z-index: 2;

  &:hover,
  &:focus {
    border-color: $button-hover;
  }

  &:active {
    transform: scale(.8);
  }

  @media (any-hover: hover) {
    transition: border-color .2s, color .2s, opacity .2s, transform .2s;
  }
}

[id='prev'] {
  inset-inline: 1rem auto;
}

[id='next'] {
  inset-inline: auto 1rem;
}

// Prev/next button icons.
svg {
  block-size: auto;
  fill: currentColor;
  pointer-events: none;
  inline-size: 100%;
}

line {
  stroke: currentColor;
  stroke-width: 2px;
}
